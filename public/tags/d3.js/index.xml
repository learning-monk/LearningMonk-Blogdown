<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>D3.js on Learning Monk Blog</title>
    <link>/tags/d3.js/</link>
    <description>Recent content in D3.js on Learning Monk Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© learning-monk.github.io</copyright>
    <lastBuildDate>Fri, 13 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/d3.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sortable Bar Chart with D3.js</title>
      <link>/posts/2020-11-13-sortable-bar-chart-with-d3-js/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2020-11-13-sortable-bar-chart-with-d3-js/</guid>
      <description>.myCode {background-color: black;color: white;}This chart is made based on Mike Bostock’s example code: https://observablehq.com/@d3/sortable-bar-chart#chart
I rewrote the code implementing my own logic. Let’s quickly understand the data behind this code before we dive into the steps of creating the chart.
This is a small dataset with Alphabets and their frequency of usage in words.
Link to the dataset:https://gist.githubusercontent.com/learning-monk/96c71857dcfc348ecbcda5cb4a90163a/raw/69fa895f7b5f2d99d236762969c46b1a9c47604a/alphabet.csv
Components to be added:</description>
    </item>
    
    <item>
      <title>Analyzing suicide rates with D3.js</title>
      <link>/posts/analyzing-suicide-rates-with-d3-js/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/analyzing-suicide-rates-with-d3-js/</guid>
      <description>In this article, I am going to create a simple Stacked bar chart using D3.js (a Javascript library for data visualization) to understand suicide rates by Region and Gender for the period 1985-2016.
Here is the link to the dataset.
You might ask me, why use D3.js for creating such simple charts, as much easier tools are available. You are right. D3.js is an overkill for such a simple chart. But, the reason behind using D3.</description>
    </item>
    
  </channel>
</rss>